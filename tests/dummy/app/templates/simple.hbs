<h2>Simple table</h2>

<p>
  In this example, ember-yeti-tables "unrolls" the table for you if you use
  <code>\{{table.body}}</code> in the blockless form.
</p>

<p>
  You can still customize the generated rows using:
</p>

<ul>
  <li>
    <code>onRowClick</code> - adds a click action to each row, called
    with the clicked row's data as an argument
  </li>
  <li>
    <code>rowClass</code> - adds a class to each <code>tr</code> element
  </li>
</ul>

{{#yeti-table data=data as |table|}}

  {{#table.header as |header|}}
    {{#header.column prop="firstName"}}
      First name
    {{/header.column}}
    {{#header.column prop="lastName"}}
      Last name
    {{/header.column}}
    {{#header.column prop="points"}}
      Points
    {{/header.column}}
  {{/table.header}}

  {{table.body}}

{{/yeti-table}}

<p>
  If you need to make more advanced customizations, you will need
  to use <code>\{{#table.body}}</code> in the block form. This form
  allows you to:
</p>

<ul>
  <li>Use any component or markup as the cell's content</li>
  <li>Use the row data to accross multiple cells</li>
  <li>Attach click listeners to the row or cell</li>
  <li>Use row data to conditionally add classes</li>
</ul>

{{#yeti-table data=data as |table|}}

  {{#table.header as |header|}}
    {{#header.column prop="firstName"}}
      First name
    {{/header.column}}
    {{#header.column prop="lastName"}}
      Last name
    {{/header.column}}
    {{#header.column prop="points"}}
      Points
    {{/header.column}}
  {{/table.header}}

  {{#table.body as |body person|}}
    {{#body.row as |row|}}
      {{#row.cell}}
        {{person.firstName}}
      {{/row.cell}}
      {{#row.cell}}
        {{person.lastName}}
      {{/row.cell}}
      {{#row.cell}}
        {{person.points}}
      {{/row.cell}}
    {{/body.row}}
  {{/table.body}}

{{/yeti-table}}